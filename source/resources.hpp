/*

Copyright (c) 2024 Alexander Brandt

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is "Incompatible With Secondary Licenses", as
defined by the Mozilla Public License, v. 2.0.
*/

#ifndef RESOURCES_HPP
#define RESOURCES_HPP

#include <stdint.h>
#include <stdlib.h>


struct Character
{
	uint16_t data_index;
	uint8_t width : 4;
	uint8_t height : 4;
	uint8_t y : 4;
	uint8_t unused : 4;
};

struct Font
{
	size_t characters_length;
	size_t data_length;
	const Character* characters;
	const uint16_t* data;
};


class Font95
{
  public:
	static constexpr size_t CHARACTERS_LENGTH = 128;
	static constexpr size_t DATA_LENGTH = 562;

	static constexpr Character CHARACTERS[CHARACTERS_LENGTH] = {
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 3, 0, 0},   {0, 2, 9, 1},    {9, 4, 3, 1},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {12, 2, 3, 1},   {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {15, 6, 5, 4},  {20, 3, 2, 9},  {22, 3, 1, 6},   {23, 2, 1, 9},   {0, 0, 0, 0},
	    {24, 6, 9, 1},  {33, 4, 9, 1},  {42, 6, 9, 1},  {51, 6, 9, 1},   {60, 6, 9, 1},   {69, 6, 9, 1},
	    {78, 6, 9, 1},  {87, 6, 9, 1},  {96, 6, 9, 1},  {105, 6, 9, 1},  {114, 2, 6, 4},  {120, 2, 7, 4},
	    {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},   {127, 6, 9, 1},  {0, 0, 0, 0},    {136, 8, 9, 1},
	    {145, 6, 9, 1}, {154, 7, 9, 1}, {163, 7, 9, 1}, {172, 6, 9, 1},  {181, 6, 9, 1},  {190, 7, 9, 1},
	    {199, 7, 9, 1}, {208, 2, 9, 1}, {217, 5, 9, 1}, {226, 7, 9, 1},  {235, 6, 9, 1},  {244, 8, 9, 1},
	    {253, 7, 9, 1}, {262, 7, 9, 1}, {271, 7, 9, 1}, {280, 7, 9, 1},  {289, 7, 9, 1},  {298, 6, 9, 1},
	    {307, 6, 9, 1}, {316, 7, 9, 1}, {325, 8, 9, 1}, {334, 12, 9, 1}, {343, 8, 9, 1},  {352, 8, 9, 1},
	    {361, 8, 9, 1}, {0, 0, 0, 0},   {0, 0, 0, 0},   {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {370, 6, 6, 4}, {376, 6, 9, 1}, {385, 6, 6, 4},  {391, 6, 9, 1},  {400, 6, 6, 4},
	    {406, 3, 9, 1}, {415, 6, 8, 4}, {423, 6, 9, 1}, {432, 2, 9, 1},  {441, 2, 11, 1}, {452, 6, 9, 1},
	    {461, 2, 9, 1}, {470, 8, 6, 4}, {476, 6, 6, 4}, {482, 6, 6, 4},  {488, 6, 8, 4},  {496, 6, 8, 4},
	    {504, 3, 6, 4}, {510, 5, 6, 4}, {516, 3, 8, 2}, {524, 6, 6, 4},  {530, 6, 6, 4},  {536, 8, 6, 4},
	    {542, 5, 6, 4}, {548, 5, 8, 4}, {556, 5, 6, 4}, {0, 0, 0, 0},    {0, 0, 0, 0},    {0, 0, 0, 0},
	    {0, 0, 0, 0},   {0, 0, 0, 0},
	};

	static constexpr uint16_t DATA[DATA_LENGTH] = {
	    /* ! */ 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0000, 0x0002,
	    /* " */ 0x000A, 0x000A, 0x000A,
	    /* ' */ 0x0002, 0x0002, 0x0002,
	    /* + */ 0x0008, 0x0008, 0x003E, 0x0008, 0x0008,
	    /* , */ 0x0004, 0x0002,
	    /* - */ 0x0006,
	    /* . */ 0x0002,
	    /* 0 */ 0x001C, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x001C,
	    /* 1 */ 0x0008, 0x000E, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008,
	    /* 2 */ 0x001C, 0x0022, 0x0020, 0x0020, 0x0010, 0x0008, 0x0004, 0x0002, 0x003E,
	    /* 3 */ 0x001C, 0x0022, 0x0020, 0x0020, 0x0018, 0x0020, 0x0020, 0x0022, 0x001C,
	    /* 4 */ 0x0010, 0x0018, 0x0018, 0x0014, 0x0014, 0x0012, 0x003E, 0x0010, 0x0010,
	    /* 5 */ 0x003E, 0x0002, 0x0002, 0x001E, 0x0022, 0x0020, 0x0020, 0x0022, 0x001C,
	    /* 6 */ 0x001C, 0x0022, 0x0002, 0x0002, 0x001E, 0x0022, 0x0022, 0x0022, 0x001C,
	    /* 7 */ 0x003E, 0x0020, 0x0010, 0x0010, 0x0008, 0x0008, 0x0004, 0x0004, 0x0004,
	    /* 8 */ 0x001C, 0x0022, 0x0022, 0x0022, 0x001C, 0x0022, 0x0022, 0x0022, 0x001C,
	    /* 9 */ 0x001C, 0x0022, 0x0022, 0x0022, 0x003C, 0x0020, 0x0020, 0x0022, 0x001C,
	    /* : */ 0x0002, 0x0000, 0x0000, 0x0000, 0x0000, 0x0002,
	    /* ; */ 0x0002, 0x0000, 0x0000, 0x0000, 0x0000, 0x0002, 0x0002,
	    /* ? */ 0x001C, 0x0022, 0x0020, 0x0020, 0x0010, 0x0008, 0x0008, 0x0000, 0x0008,
	    /* A */ 0x0010, 0x0010, 0x0028, 0x0028, 0x0044, 0x0044, 0x007C, 0x0082, 0x0082,
	    /* B */ 0x001E, 0x0022, 0x0022, 0x0022, 0x001E, 0x0022, 0x0022, 0x0022, 0x001E,
	    /* C */ 0x003C, 0x0042, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0042, 0x003C,
	    /* D */ 0x001E, 0x0022, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0022, 0x001E,
	    /* E */ 0x003E, 0x0002, 0x0002, 0x0002, 0x001E, 0x0002, 0x0002, 0x0002, 0x003E,
	    /* F */ 0x003E, 0x0002, 0x0002, 0x0002, 0x001E, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* G */ 0x003C, 0x0042, 0x0002, 0x0002, 0x0072, 0x0042, 0x0042, 0x0062, 0x005C,
	    /* H */ 0x0042, 0x0042, 0x0042, 0x0042, 0x007E, 0x0042, 0x0042, 0x0042, 0x0042,
	    /* I */ 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* J */ 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010, 0x0012, 0x0012, 0x000C,
	    /* K */ 0x0022, 0x0012, 0x000A, 0x0006, 0x0006, 0x000A, 0x0012, 0x0022, 0x0042,
	    /* L */ 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x003E,
	    /* M */ 0x0082, 0x0082, 0x00C6, 0x00C6, 0x00AA, 0x00AA, 0x0092, 0x0092, 0x0082,
	    /* N */ 0x0042, 0x0046, 0x0046, 0x004A, 0x004A, 0x0052, 0x0062, 0x0062, 0x0042,
	    /* O */ 0x003C, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x003C,
	    /* P */ 0x003E, 0x0042, 0x0042, 0x0042, 0x003E, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* Q */ 0x003C, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0052, 0x0062, 0x003C,
	    /* R */ 0x003E, 0x0042, 0x0042, 0x0042, 0x003E, 0x0042, 0x0042, 0x0042, 0x0042,
	    /* S */ 0x001C, 0x0022, 0x0002, 0x0002, 0x001C, 0x0020, 0x0020, 0x0022, 0x001C,
	    /* T */ 0x003E, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008, 0x0008,
	    /* U */ 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x0042, 0x003C,
	    /* V */ 0x0082, 0x0082, 0x0044, 0x0044, 0x0044, 0x0028, 0x0028, 0x0010, 0x0010,
	    /* W */ 0x0802, 0x0802, 0x0444, 0x0444, 0x0444, 0x02A8, 0x02A8, 0x0110, 0x0110,
	    /* X */ 0x0082, 0x0082, 0x0044, 0x0028, 0x0010, 0x0028, 0x0044, 0x0082, 0x0082,
	    /* Y */ 0x0082, 0x0082, 0x0044, 0x0028, 0x0010, 0x0010, 0x0010, 0x0010, 0x0010,
	    /* Z */ 0x00FE, 0x0080, 0x0040, 0x0020, 0x0010, 0x0008, 0x0004, 0x0002, 0x00FE,
	    /* a */ 0x001C, 0x0020, 0x003C, 0x0022, 0x0022, 0x003C,
	    /* b */ 0x0002, 0x0002, 0x0002, 0x001E, 0x0022, 0x0022, 0x0022, 0x0022, 0x001E,
	    /* c */ 0x001C, 0x0022, 0x0002, 0x0002, 0x0022, 0x001C,
	    /* d */ 0x0020, 0x0020, 0x0020, 0x003C, 0x0022, 0x0022, 0x0022, 0x0022, 0x003C,
	    /* e */ 0x001C, 0x0022, 0x003E, 0x0002, 0x0022, 0x001C,
	    /* f */ 0x0004, 0x0002, 0x0002, 0x0006, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* g */ 0x003C, 0x0022, 0x0022, 0x0022, 0x0022, 0x003C, 0x0020, 0x001E,
	    /* h */ 0x0002, 0x0002, 0x0002, 0x001A, 0x0026, 0x0022, 0x0022, 0x0022, 0x0022,
	    /* i */ 0x0002, 0x0000, 0x0000, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* j */ 0x0002, 0x0000, 0x0000, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* k */ 0x0002, 0x0002, 0x0002, 0x0012, 0x000A, 0x0006, 0x000A, 0x0012, 0x0022,
	    /* l */ 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* m */ 0x006E, 0x0092, 0x0092, 0x0092, 0x0092, 0x0092,
	    /* n */ 0x001A, 0x0026, 0x0022, 0x0022, 0x0022, 0x0022,
	    /* o */ 0x001C, 0x0022, 0x0022, 0x0022, 0x0022, 0x001C,
	    /* p */ 0x001E, 0x0022, 0x0022, 0x0022, 0x0022, 0x001E, 0x0002, 0x0002,
	    /* q */ 0x003C, 0x0022, 0x0022, 0x0022, 0x0022, 0x003C, 0x0020, 0x0020,
	    /* r */ 0x0006, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	    /* s */ 0x000C, 0x0012, 0x0004, 0x0008, 0x0012, 0x000C,
	    /* t */ 0x0002, 0x0002, 0x0006, 0x0002, 0x0002, 0x0002, 0x0002, 0x0004,
	    /* u */ 0x0022, 0x0022, 0x0022, 0x0022, 0x0032, 0x002C,
	    /* v */ 0x0022, 0x0022, 0x0014, 0x0014, 0x0008, 0x0008,
	    /* w */ 0x0092, 0x0092, 0x00AA, 0x00AA, 0x0044, 0x0044,
	    /* x */ 0x0012, 0x0012, 0x000C, 0x000C, 0x0012, 0x0012,
	    /* y */ 0x0012, 0x0012, 0x0012, 0x0012, 0x000C, 0x0004, 0x0004, 0x0003,
	    /* z */ 0x001E, 0x0010, 0x0008, 0x0004, 0x0002, 0x001E,
	};

	static Font ToGenericFont()
	{
		return {CHARACTERS_LENGTH, DATA_LENGTH, CHARACTERS, DATA};
	}
};

constexpr Character Font95::CHARACTERS[Font95::CHARACTERS_LENGTH]; // C++ weird corners (tldr: link problems)
constexpr uint16_t Font95::DATA[Font95::DATA_LENGTH];              // Ditto

#endif
